{"abi":[],"bytecode":{"object":"0x60b06037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c806381366cef146042578063ad9dc1a0146042575b600080fd5b6050604d3660046062565b90565b60405190815260200160405180910390f35b600060208284031215607357600080fd5b503591905056fea26469706673582212203f58cee35bc1d4371942fca09bc01d0d3778bce917f6403d371852870b99ccfa64736f6c634300081c0033","sourceMap":"495:8231:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;495:8231:10;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c806381366cef146042578063ad9dc1a0146042575b600080fd5b6050604d3660046062565b90565b60405190815260200160405180910390f35b600060208284031215607357600080fd5b503591905056fea26469706673582212203f58cee35bc1d4371942fca09bc01d0d3778bce917f6403d371852870b99ccfa64736f6c634300081c0033","sourceMap":"495:8231:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:133;;;;;;:::i;:::-;2276:5;2156:133;;;;382:25:108;;;370:2;355:18;2156:133:10;;;;;;;14:180:108;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:108;;14:180;-1:-1:-1;14:180:108:o","linkReferences":{}},"methodIdentifiers":{"layout(bytes32)":"81366cef","slot(AddressSet storage)":"ad9dc1a0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"mises mind <misesmind@proton.me>\",\"details\":\"Distinct from OpenZepplin to allow for operations upon an array of the same type.\",\"kind\":\"dev\",\"methods\":{\"layout(bytes32)\":{\"custom:selector\":\"0x81366cef\",\"custom:sig\":\"layout(bytes32)\",\"details\":\"\\\"Binds\\\" this struct to a storage slot.\",\"params\":{\"slot_\":\"The first slot to use in the range of slots used by the struct.\"},\"returns\":{\"layout_\":\"A struct from a Layout library bound to the provided slot.\"}},\"slot(AddressSet storage)\":{\"custom:selector\":\"0x5bbea693\",\"custom:sig\":\"slot(AddressSet storage)\",\"details\":\"Provides the storage pointer bound to a Struct instance.\",\"params\":{\"table\":\"Implicit \\\"table\\\" of storage slots defined as this Struct.\"},\"returns\":{\"slot_\":\"The storage slot bound to the provided Struct.\"}}},\"title\":\"AddressSetRepo - Struct and atomic operations for a set of address values;\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/collections/sets/AddressSetRepo.sol\":\"AddressSetRepo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":35000},\"remappings\":[\":daosys/=contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":solplot/=lib/solplot/\"]},\"sources\":{\"contracts/collections/arrays/Array.sol\":{\"keccak256\":\"0x49cf6d5df2b3a793a4259ee5ca61f81516d7474686bfa67a4d47029e9aa3a55b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f69a23d2c363970c0f13972f0ca3625ede081151cb66e341999022b8f689bbb7\",\"dweb:/ipfs/Qmas1RJnJJvJ1v61WoMT3hps8PzaFKfUcfDFJ6eG3uHuPB\"]},\"contracts/collections/sets/AddressSetRepo.sol\":{\"keccak256\":\"0x4d198455af2d85c44b4f34d8a7e854fa733c6e8e6ce93575fc9bf7b1a34952f7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://32012fc082139a201f66e081d06f7725a779e5e5a29427f00cd15e1ad3f15e96\",\"dweb:/ipfs/QmdRTP9vLxyar5RmQw16zocaLAUvCuvqsXAuAy922zfm9h\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{"layout(bytes32)":{"custom:selector":"0x81366cef","custom:sig":"layout(bytes32)","details":"\"Binds\" this struct to a storage slot.","params":{"slot_":"The first slot to use in the range of slots used by the struct."},"returns":{"layout_":"A struct from a Layout library bound to the provided slot."}},"slot(AddressSet storage)":{"custom:selector":"0x5bbea693","custom:sig":"slot(AddressSet storage)","details":"Provides the storage pointer bound to a Struct instance.","params":{"table":"Implicit \"table\" of storage slots defined as this Struct."},"returns":{"slot_":"The storage slot bound to the provided Struct."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["daosys/=contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","solplot/=lib/solplot/"],"optimizer":{"enabled":true,"runs":35000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/collections/sets/AddressSetRepo.sol":"AddressSetRepo"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/collections/arrays/Array.sol":{"keccak256":"0x49cf6d5df2b3a793a4259ee5ca61f81516d7474686bfa67a4d47029e9aa3a55b","urls":["bzz-raw://f69a23d2c363970c0f13972f0ca3625ede081151cb66e341999022b8f689bbb7","dweb:/ipfs/Qmas1RJnJJvJ1v61WoMT3hps8PzaFKfUcfDFJ6eG3uHuPB"],"license":"MIT"},"contracts/collections/sets/AddressSetRepo.sol":{"keccak256":"0x4d198455af2d85c44b4f34d8a7e854fa733c6e8e6ce93575fc9bf7b1a34952f7","urls":["bzz-raw://32012fc082139a201f66e081d06f7725a779e5e5a29427f00cd15e1ad3f15e96","dweb:/ipfs/QmdRTP9vLxyar5RmQw16zocaLAUvCuvqsXAuAy922zfm9h"],"license":"BUSL-1.1"}},"version":1},"id":10}