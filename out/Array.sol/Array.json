{"abi":[{"type":"function","name":"isValidIndex","inputs":[{"name":"length","type":"uint256","internalType":"uint256"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"isValid","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"error","name":"IndexOutOfBounds","inputs":[{"name":"length","type":"uint256","internalType":"uint256"},{"name":"invalidIndex","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x610115610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806365e8faf6146038575b600080fd5b6047604336600460be565b605b565b604051901515815260200160405180910390f35b600060658383606c565b9392505050565b60008183101560b5576040517f63a056dd000000000000000000000000000000000000000000000000000000008152600481018490526024810183905260440160405180910390fd5b50600192915050565b6000806040838503121560d057600080fd5b5050803592602090910135915056fea2646970667358221220a8ff17cdb6a56b69350ab989b359534e78c9ee9a41222d2044150c73d2f4c1f664736f6c634300081c0033","sourceMap":"161:3307:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:3307:24;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806365e8faf6146038575b600080fd5b6047604336600460be565b605b565b604051901515815260200160405180910390f35b600060658383606c565b9392505050565b60008183101560b5576040517f63a056dd000000000000000000000000000000000000000000000000000000008152600481018490526024810183905260440160405180910390fd5b50600192915050565b6000806040838503121560d057600080fd5b5050803592602090910135915056fea2646970667358221220a8ff17cdb6a56b69350ab989b359534e78c9ee9a41222d2044150c73d2f4c1f664736f6c634300081c0033","sourceMap":"161:3307:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;870:163;;;;;;:::i;:::-;;:::i;:::-;;;538:14:219;;531:22;513:41;;501:2;486:18;870:163:24;;;;;;;;967:12;998:28;1012:6;1020:5;998:13;:28::i;:::-;991:35;870:163;-1:-1:-1;;;870:163:24:o;1398:237::-;1496:12;1532:5;1523:6;:14;1520:88;;;1560:37;;;;;;;;739:25:219;;;780:18;;;773:34;;;712:18;;1560:37:24;;;;;;;1520:88;-1:-1:-1;1624:4:24;1398:237;;;;:::o;14:346:219:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;204:23:219;;;324:2;309:18;;;296:32;;-1:-1:-1;14:346:219:o","linkReferences":{}},"methodIdentifiers":{"isValidIndex(uint256,uint256)":"65e8faf6"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"invalidIndex\",\"type\":\"uint256\"}],\"name\":\"IndexOutOfBounds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isValidIndex\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"mises mind <misesmind@proton.me>\",\"errors\":{\"IndexOutOfBounds(uint256,uint256)\":[{\"params\":{\"invalidIndex\":\"The index that is out of bounds for the array.\",\"length\":\"The length of the array for which `invalidIndex` is out of bounds.\"}}]},\"kind\":\"dev\",\"methods\":{\"isValidIndex(uint256,uint256)\":{\"custom:selector\":\"0x65e8faf6\",\"custom:sig\":\"isValidIndex(uint256,uint256)\",\"details\":\"Reverts with custom error if provided index would be out of bounds of provided length.Facilitates usage of custom error within a require statement.\",\"params\":{\"index\":\"The index to confirm is contained within the provided length.\",\"length\":\"The length of the array againct which the index is being checked..\"}}},\"title\":\"Array Standard operations for all arrays.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/collections/arrays/Array.sol\":\"Array\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":35000},\"remappings\":[\":daosys/=contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":solplot/=lib/solplot/\"]},\"sources\":{\"contracts/collections/arrays/Array.sol\":{\"keccak256\":\"0x49cf6d5df2b3a793a4259ee5ca61f81516d7474686bfa67a4d47029e9aa3a55b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f69a23d2c363970c0f13972f0ca3625ede081151cb66e341999022b8f689bbb7\",\"dweb:/ipfs/Qmas1RJnJJvJ1v61WoMT3hps8PzaFKfUcfDFJ6eG3uHuPB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"invalidIndex","type":"uint256"}],"type":"error","name":"IndexOutOfBounds"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"pure","type":"function","name":"isValidIndex","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"isValidIndex(uint256,uint256)":{"custom:selector":"0x65e8faf6","custom:sig":"isValidIndex(uint256,uint256)","details":"Reverts with custom error if provided index would be out of bounds of provided length.Facilitates usage of custom error within a require statement.","params":{"index":"The index to confirm is contained within the provided length.","length":"The length of the array againct which the index is being checked.."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["daosys/=contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","solplot/=lib/solplot/"],"optimizer":{"enabled":true,"runs":35000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/collections/arrays/Array.sol":"Array"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/collections/arrays/Array.sol":{"keccak256":"0x49cf6d5df2b3a793a4259ee5ca61f81516d7474686bfa67a4d47029e9aa3a55b","urls":["bzz-raw://f69a23d2c363970c0f13972f0ca3625ede081151cb66e341999022b8f689bbb7","dweb:/ipfs/Qmas1RJnJJvJ1v61WoMT3hps8PzaFKfUcfDFJ6eG3uHuPB"],"license":"MIT"}},"version":1},"id":24}