{"abi":[{"type":"function","name":"receiveFlashLoan","inputs":[{"name":"tokens","type":"address[]","internalType":"contract IERC20[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"},{"name":"feeAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"userData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":"f04f2707"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/protocols/dexes/balancer/v2/interfaces/IFlashLoanRecipient.sol\":\"IFlashLoanRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":35000},\"remappings\":[\":daosys/=contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":solplot/=lib/solplot/\"]},\"sources\":{\"contracts/protocols/dexes/balancer/v2/interfaces/IFlashLoanRecipient.sol\":{\"keccak256\":\"0x898240b04fc7ef3b3a8eead8f65c5bfb3c28f807913b68a62a02d01e7c0b6445\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7743a0e61ead54505e51f8f488b1746d647d661035641b3dbb801422706f3d36\",\"dweb:/ipfs/QmTwfW8nnmXjP6W9zLiwR9LVPmuTzrW4ABbNa6Mg7ELFWr\"]},\"contracts/tokens/erc20/interfaces/IERC20.sol\":{\"keccak256\":\"0x7de0b3c8fceb42b1f7554ff8ddcc5e40d28296e83d071edb12752b9f94527f6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32fd10ac37550ee6efd47f53ffc8a371e07a9c000c71346b29d4c98d622b5ecc\",\"dweb:/ipfs/QmXsWVj1RqtYj5w5KF9HAfSng1HQQVdPfA6mhv5ByiViiG\"]},\"contracts/tokens/erc6903/interfaces/IERC6093.sol\":{\"keccak256\":\"0xe1b1d11cd44266c90b4477b505a771bf313cd68cc5ac9a24007c6ca23fe1f4f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c2e295180e46b7702d366ac2867f8bd1a6bbed180dba1bfe07e24c1a36c266\",\"dweb:/ipfs/QmSZYe2Hu3nfGCvrcUm2tGVmb7uXirpD12feuUb1znirYg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IERC20[]","name":"tokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"feeAmounts","type":"uint256[]"},{"internalType":"bytes","name":"userData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"receiveFlashLoan"}],"devdoc":{"kind":"dev","methods":{"receiveFlashLoan(address[],uint256[],uint256[],bytes)":{"details":"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["daosys/=contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","solplot/=lib/solplot/"],"optimizer":{"enabled":true,"runs":35000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/protocols/dexes/balancer/v2/interfaces/IFlashLoanRecipient.sol":"IFlashLoanRecipient"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/protocols/dexes/balancer/v2/interfaces/IFlashLoanRecipient.sol":{"keccak256":"0x898240b04fc7ef3b3a8eead8f65c5bfb3c28f807913b68a62a02d01e7c0b6445","urls":["bzz-raw://7743a0e61ead54505e51f8f488b1746d647d661035641b3dbb801422706f3d36","dweb:/ipfs/QmTwfW8nnmXjP6W9zLiwR9LVPmuTzrW4ABbNa6Mg7ELFWr"],"license":"GPL-3.0-or-later"},"contracts/tokens/erc20/interfaces/IERC20.sol":{"keccak256":"0x7de0b3c8fceb42b1f7554ff8ddcc5e40d28296e83d071edb12752b9f94527f6c","urls":["bzz-raw://32fd10ac37550ee6efd47f53ffc8a371e07a9c000c71346b29d4c98d622b5ecc","dweb:/ipfs/QmXsWVj1RqtYj5w5KF9HAfSng1HQQVdPfA6mhv5ByiViiG"],"license":"MIT"},"contracts/tokens/erc6903/interfaces/IERC6093.sol":{"keccak256":"0xe1b1d11cd44266c90b4477b505a771bf313cd68cc5ac9a24007c6ca23fe1f4f7","urls":["bzz-raw://79c2e295180e46b7702d366ac2867f8bd1a6bbed180dba1bfe07e24c1a36c266","dweb:/ipfs/QmSZYe2Hu3nfGCvrcUm2tGVmb7uXirpD12feuUb1znirYg"],"license":"MIT"}},"version":1},"id":53}